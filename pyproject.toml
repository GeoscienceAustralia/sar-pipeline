[build-system]
requires = ["setuptools>=61.0", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "sar-pipeline"
requires-python = ">=3.8"
authors = [
    {name="Geoscience Australia", email="DigitalEarthAntarctica@ga.gov.au"},
]
description = "Antarctic SAR Backscatter Processing Pipeline"
classifiers=[
    "Intended Audience :: Science/Research",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
]
version = "0.1" # TODO base this on files in proje t
dependencies = [
    "affine", 
    "asf-search", 
    "boto3", 
    "botocore", 
    "click", 
    "h5py", 
    "pystac", 
    "python-dateutil", 
    "ruamel-yaml", 
    "tomli", 
]

[project.urls]
Homepage = "https://github.com/GeoscienceAustralia/sar-pipleine.git"
# Documentation = "XXX"

[project.scripts]
find-scene = "sar_pipeline.nci.cli:find_scene_file"
find-orbits = "sar_pipeline.nci.cli:find_orbits_for_scene"
download-etad = "sar_pipeline.preparation.cli:download_etad"
run-pyrosar-gamma-workflow = "sar_pipeline.nci.cli:run_pyrosar_gamma_workflow"
submit-pyrosar-gamma-workflow = "sar_pipeline.nci.cli:submit_pyrosar_gamma_workflow"
upload-files-in-folder-to-s3 = "sar_pipeline.nci.cli:upload_files_in_folder_to_s3"
get-data-for-scene-and-make-run-config = "sar_pipeline.aws.cli:get_data_for_scene_and_make_run_config"
make-rtc-opera-stac-and-upload-bursts = "sar_pipeline.aws.cli:make_rtc_opera_stac_and_upload_bursts"

[tool.pytest.ini_options]
testpaths = ["tests/*"]

[tool.setuptools.packages.find]
where = ["."]

[tool.setuptools.package-data]
sar_pipeline = ["**/*.yaml", "**/*.yml", "**/*.gpkg", "**/*.json"]
[tool.pixi.project]
channels = ["conda-forge", "avalentino", "s1-etad"]
platforms = ["linux-64"]

[tool.pixi.pypi-dependencies]
sar-pipeline = { path = ".", editable = true }

[tool.pixi.dependencies]
geopandas = ">=1.0.1"
numpy = "<2.0"
gdal = ">=3.10.2"
pyproj = ">=3.7.1"
pyrosar = ">=0.28.0"
rasterio = ">=1.4.3"
shapely = ">=2.0.7"
spatialist = ">=0.14.0"
s1etad = ">=0.5.5,<0.6"
s1etad_tools = ">=0.8.1,<0.9"

[tool.pixi.environments]
default = { solve-group = "default" }
test = { features = ["test"], solve-group = "default" }

[tool.pixi.feature.test.tasks]
tests = "pytest"

[tool.pixi.tasks]
export_conda = "pixi workspace export conda-environment"

[dependency-groups]
test = ["pytest"]
